/*
Module: relabelings-common
Description: Handles relabelings for extracting common fields across various roles
*/

argument "targets" {
	// comment = "Discovered targets to apply relabelings to"
	optional = false
}

argument "git_repo" {
	optional = true
	default  = coalesce(env("GIT_REPO"), "https://github.com/grafana/agent-modules.git")
}

argument "git_rev" {
	optional = true
	default  = coalesce(env("GIT_REV"), env("GIT_REVISION"), env("GIT_BRANCH"), "main")
}

argument "git_pull_freq" {
	optional = true
	default  = "5m"
}

export "relabelings" {
	value = module.git.relabelings_static.exports.relabelings
}

discovery.relabel "common" {
	targets = argument.targets.value

	// set the namespace label
	rule {
		action        = "replace"
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	// set the app name if specified as metadata labels "app:" or "app.kubernetes.io/name:"
	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_pod_label_app_kubernetes_io_name",
			"__meta_kubernetes_pod_label_k8s_app",
			"__meta_kubernetes_pod_label_app",
			"__meta_kubernetes_service_label_app_kubernetes_io_name",
			"__meta_kubernetes_service_label_k8s_app",
			"__meta_kubernetes_service_label_app",
			"__meta_kubernetes_endpoints_label_app_kubernetes_io_name",
			"__meta_kubernetes_endpoints_label_k8s_app",
			"__meta_kubernetes_endpoints_label_app",
			"__meta_kubernetes_endpointslice_label_app_kubernetes_io_name",
			"__meta_kubernetes_endpointslice_label_k8s_app",
			"__meta_kubernetes_endpointslice_label_app",
			"__meta_kubernetes_ingress_label_app_kubernetes_io_name",
			"__meta_kubernetes_ingress_label_k8s_app",
			"__meta_kubernetes_ingress_label_app",
		]
		regex        = "^(?:;*)?([^;]+).*$"
		replacement  = "$1"
		target_label = "app"
	}

	// set the app component if specified as metadata labels "component:" or "app.kubernetes.io/component:"
	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_pod_label_app_kubernetes_io_component",
			"__meta_kubernetes_pod_label_component",
			"__meta_kubernetes_service_label_app_kubernetes_io_component",
			"__meta_kubernetes_service_label_component",
			"__meta_kubernetes_endpoints_label_app_kubernetes_io_component",
			"__meta_kubernetes_endpoints_label_component",
			"__meta_kubernetes_endpointslice_label_app_kubernetes_io_component",
			"__meta_kubernetes_endpointslice_label_component",
			"__meta_kubernetes_ingress_label_app_kubernetes_io_component",
			"__meta_kubernetes_ingress_label_component",
		]
		regex        = "^(?:;*)?([^;]+).*$"
		replacement  = "$1"
		target_label = "component"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_pod_annotation_logs_agent_grafana_com_tenant",
			"__meta_kubernetes_pod_annotation_metrics_agent_grafana_com_tenant",
			"__meta_kubernetes_service_annotation_metrics_agent_grafana_com_tenant",
			"__meta_kubernetes_endpoints_annotation_metrics_agent_grafana_com_tenant",
			"__meta_kubernetes_endpointslice_annotation_metrics_agent_grafana_com_tenant",
			"__meta_kubernetes_ingress_annotation_metrics_agent_grafana_com_tenant",
			"__meta_kubernetes_node_annotation_metrics_agent_grafana_com_tenant",
		]
		separator    = ";"
		regex        = "^(?:;*)?([^;]+).*$"
		replacement  = "$1"
		target_label = "__tmp_tenant"
	}

	// set the job label from the discovered annotation
	rule {
		action        = "replace"
		source_labels = ["__tmp_job"]
		regex         = "(.+)"
		replacement   = "$1"
		target_label  = "job"
	}
}

// apply static relabelings
module.git "relabelings_static" {
	repository     = argument.git_repo.value
	revision       = argument.git_rev.value
	pull_frequency = argument.git_pull_freq.value
	path           = "modules/kubernetes/relabelings/static.river"

	arguments {
		targets = discovery.relabel.common.output
	}
}
