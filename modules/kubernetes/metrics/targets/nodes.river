/*
Module: metrics-target-nodes
Description: Performs Kubernetes service discovery for nodes, applies relabelings
*/
argument "tenant" {
	// comment = "The tenant to write metrics to.  This does not have to be the tenantId, this is the value to look for in the logs.agent.grafana.com/tenant annotation, and this can be a regex."
	optional = true
	default  = ".*"
}

argument "git_repo" {
	optional = true
	default  = coalesce(env("GIT_REPO"), "https://github.com/grafana/agent-modules.git")
}

argument "git_rev" {
	optional = true
	default  = coalesce(env("GIT_REV"), env("GIT_REVISION"), env("GIT_BRANCH"), "main")
}

argument "git_pull_freq" {
	optional = true
	default  = "5m"
}

export "relabelings" {
	value = module.git.relabelings_common.exports.relabelings
}

// get the available nodes
discovery.kubernetes "nodes" {
	role = "node"
}

// apply metric annotation relabelings
module.git "relabelings_annotations" {
	repository     = argument.git_repo.value
	revision       = argument.git_rev.value
	pull_frequency = argument.git_pull_freq.value
	path           = "modules/kubernetes/metrics/relabelings/annotations/metrics/node.river"

	arguments {
		targets = discovery.kubernetes.nodes.targets
	}
}

discovery.relabel "scrape_targets" {
	targets = module.git.relabelings_annotations.exports.relabelings.output

	// set the instance label to the node name
	rule {
		action        = "replace"
		source_labels = ["__meta_kubernetes_node_name"]
		target_label  = "instance"
	}

	// allow nodes to declare what tenant their metrics should be written to, the following annotations are supported:
	//   metrics.agent.grafana.com/tenant: "primary"
	rule {
		action        = "keep"
		source_labels = ["__tmp_tenant"]
		regex         = "^(" + argument.tenant.value + ")$"
	}

	// for nodes always use https
	rule {
		action        = "replace"
		source_labels = ["__tmp_scheme"]
		replacement   = "https"
		target_label  = "__scheme__"
	}

	// for nodes always use the address of
	rule {
		action       = "replace"
		replacement  = "kubernetes.default.svc.cluster.local:443"
		target_label = "__address__"
	}

	// allow nodes to declare how often to scrape metrics, the following annotations are supported:
	//   metrics.agent.grafana.com/interval: 5m
	//   prometheus.io/interval: 5m
	rule {
		action        = "replace"
		source_labels = ["__tmp_interval"]
		target_label  = "__scrape_interval__"
	}

	// allow nodes to declare how long before a scrape times out, the following annotations are supported:
	//   metrics.agent.grafana.com/timeout: 30s
	//   prometheus.io/timeout: 30s
	rule {
		action        = "replace"
		source_labels = ["__tmp_timeout"]
		target_label  = "__scrape_timeout__"
	}
}

// apply common relabelings
module.git "relabelings_common" {
	repository     = argument.git_repo.value
	revision       = argument.git_rev.value
	pull_frequency = argument.git_pull_freq.value
	path           = "modules/kubernetes/relabelings/common.river"

	arguments {
		targets       = discovery.relabel.scrape_targets.output
		git_repo      = argument.git_repo.value
		git_rev       = argument.git_rev.value
		git_pull_freq = argument.git_pull_freq.value
	}
}
