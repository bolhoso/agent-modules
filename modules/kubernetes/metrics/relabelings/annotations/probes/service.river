argument "targets" {
	// comment = "Discovered targets to apply relabelings to"
	optional = false
}

export "relabelings" {
	value = discovery.relabel.probe_annotations
}

discovery.relabel "probe_annotations" {
	targets = argument.targets.value

	// allow resources to declare they should be probed or not, the following annotations are supported:
	//   probes.agent.grafana.com/probe: false
	// or
	//   prometheus.io/probe: true
	rule {
		action       = "replace"
		replacement  = "false"
		target_label = "__tmp_probe"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_probe",
			"__meta_kubernetes_service_annotation_prometheus_io_probe",
		]
		separator    = ";"
		regex        = "^(?:;*)?(true|false).*$"
		replacement  = "$1"
		target_label = "__tmp_probe"
	}
	// only keep service targets that have probe: true, the following annotations are supported:
	rule {
		action        = "keep"
		source_labels = ["__tmp_probe"]
		regex         = "true"
	}

	// allow resources to declare the port to use when probing, the default value is the discovered port from
	// service discovery, the following annotations are supported:
	//   probes.agent.grafana.com/port: 9090
	// fallback
	//   metrics.agent.grafana.com/port: 9090
	// or
	//   prometheus.io/port: 9090
	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_port",
			"__meta_kubernetes_service_annotation_metrics_agent_grafana_com_port",
			"__meta_kubernetes_service_annotation_prometheus_io_port",
		]
		separator    = ";"
		regex        = "^(?:;*)?(\\d+).*$"
		replacement  = "$1"
		target_label = "__tmp_probe_port"
	}

	// allow resources to declare their the path to use when being probed, the default value is "/metrics",
	// the following annotations are supported:
	//   probes.agent.grafana.com/path: /~/ready
	// fallback
	//   metrics.agent.grafana.com/path: /metrics/foo
	// or
	//   prometheus.io/path: /bar/metrics
	rule {
		action       = "replace"
		replacement  = "/metrics"
		target_label = "__tmp_probe_path"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_path",
			"__meta_kubernetes_service_annotation_metrics_agent_grafana_com_path",
			"__meta_kubernetes_service_annotation_prometheus_io_path",
		]
		separator    = ";"
		regex        = "^(?:;*)?([^;]+).*$"
		replacement  = "$1"
		target_label = "__tmp_probe_path"
	}

	// allow resources to declare the tenant to send probe metrics to should be sent to, the following annotation is supported:
	//   probes.agent.grafana.com/tenant: primary
	// fallback
	//   metrics.agent.grafana.com/tenant: primary
	//
	// Note: This does not necessarily have to be the actual tenantId, it can be a friendly name as well that is simply used
	//       to determine if the metrics should be gathered for the current tenant
	rule {
		action       = "replace"
		replacement  = ""
		target_label = "__tmp_probe_tenant"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_tenant",
			"__meta_kubernetes_service_annotation_metrics_agent_grafana_com_tenant",
		]
		separator    = ";"
		regex        = "^(?:;*)?([^;]+).*$"
		replacement  = "$1"
		target_label = "__tmp_probe_tenant"
	}

	// allow resources to declare the protocol to use when probing, the default value is "",
	// this is the protocol that is used when sending the request to blackbox exporter, it is NOT
	// the protocol used.
	//   probes.agent.grafana.com/scheme: http
	rule {
		action       = "replace"
		replacement  = ""
		target_label = "__tmp_probe_scheme"
	}

	rule {
		action        = "replace"
		source_labels = ["__meta_kubernetes_service_annotation_probes_agent_grafana_com_scheme"]
		separator     = ";"
		regex         = "^(https?)$"
		replacement   = "$1://"
		target_label  = "__tmp_probe_scheme"
	}

	// allow resources to declare their the module to use when probing, the default value is "unknown",
	// the following annotations are supported:
	//   probes.agent.grafana.com/module: http_2xx
	// or
	//   prometheus.io/module: http_2xx
	rule {
		action       = "replace"
		replacement  = "unknown"
		target_label = "__tmp_probe_module"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_module",
			"__meta_kubernetes_service_annotation_prometheus_io_module",
		]
		separator    = ";"
		regex        = "^(?:;*)?([^;]+).*$"
		replacement  = "$1"
		target_label = "__tmp_probe_module"
	}

	// allow resources to declare how often they should be probed, the default value is 1m,
	// the following annotations are supporte with the value provided in duration format:
	//   probes.agent.grafana.com/interval: 5m
	// fallback
	//   metrics.agent.grafana.com/interval: 5m
	// fallback
	//   prometheus.io/interval: 5m
	rule {
		action       = "replace"
		replacement  = "1m"
		target_label = "__tmp_probe_interval"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_interval",
			"__meta_kubernetes_service_annotation_metrics_agent_grafana_com_interval",
			"__meta_kubernetes_service_annotation_prometheus_io_interval",
		]
		separator    = ";"
		regex        = "^(?:;*)?(\\d+(s|m|ms|h|d)).*$"
		replacement  = "$1"
		target_label = "__tmp_probe_interval"
	}

	// allow resources to declare the timeout of the scrape request, the default value is 10s,
	// the following annotations are supporte with the value provided in duration format:
	//   probes.agent.grafana.com/timeout: 30s
	// fallback
	//   metrics.agent.grafana.com/timeout: 30s
	// fallback
	//   prometheus.io/timeout: 30s
	rule {
		action       = "replace"
		replacement  = "1m"
		target_label = "__tmp_probe_timeout"
	}

	rule {
		action        = "replace"
		source_labels = [
			"__meta_kubernetes_service_annotation_probes_agent_grafana_com_timeout",
			"__meta_kubernetes_service_annotation_metrics_agent_grafana_com_timeout",
			"__meta_kubernetes_service_annotation_prometheus_io_timeout",
		]
		separator    = ";"
		regex        = "^(?:;*)?(\\d+(s|m|ms|h|d)).*$"
		replacement  = "$1"
		target_label = "__tmp_probe_timeout"
	}

	// allow resources to declare their the job label value to use probing, the default value is "blackbox-exporter",
	// the following annotations are supported:
	//   probes.agent.grafana.com/job: my-service-probe
	rule {
		action       = "replace"
		replacement  = ""
		target_label = "__tmp_job"
	}

	rule {
		action        = "replace"
		source_labels = ["__meta_kubernetes_service_annotation_probes_agent_grafana_com_job"]
		separator     = ";"
		regex         = "^(?:;*)?([^;]+).*$"
		replacement   = "$1"
		target_label  = "__tmp_probe_job"
	}
}
